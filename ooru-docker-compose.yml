version: '2.4'

volumes:
  es_data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/home/ubuntu/Registries/example/es_data'

services:
  es:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.13
    environment:
      - discovery.type=single-node
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
      - ELASTIC_PASSWORD=${ELASTIC_SEARCH_PASSWORD}
      - xpack.security.enabled=${ELASTIC_SECURITY_ENABLED-false}
    ports:
      - '9200:9200'
      - '9300:9300'
    volumes:
      - es_data:/usr/share/elasticsearch/data:rw
    healthcheck:
      test:
        [
          'CMD',
          'curl',
          '-f',
          'localhost:9200/_cluster/health',
          '--header',
          'Authorization: Basic ZWxhc3RpYzpEa0llZFBQU0Ni',
        ]
      interval: 30s
      timeout: 10s
      retries: 4
  db:
    image: postgres:12.1-alpine
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
  registry:
    image: ghcr.io/sunbird-rc/sunbird-rc-core:${RELEASE_VERSION}
    volumes:
      - ./${SCHEMA_DIR-java/registry/src/main/resources/public/_schemas}:/home/sunbirdrc/config/public/_schemas
      - ./${VIEW_DIR-java/registry/src/main/resources/views}:/home/sunbirdrc/config/views/
    environment:
      - connectionInfo_uri=jdbc:postgresql://db:5432/postgres
      - connectionInfo_username=postgres
      - connectionInfo_password=postgres
      - encryption_enabled=${ENCRYPTION_ENABLED-false}
      - encryption_health_check_url=http://encryption-service:8013/health
      - encryption_uri=http://encryption-service:8013/crypto/v1/_encrypt
      - encryption_batch_uri=http://encryption-service:8013/crypto/v1/_encrypt
      - event_enabled=${EVENT_ENABLED-false}
      - event_topic=events
      - event_providerName=dev.sunbirdrc.registry.service.impl.KafkaEventService
      - elastic_search_connection_url=${ELASTIC_SEARCH_CONNECTION_URL-es:9200}
      - elastic_search_scheme=${ELASTIC_SEARCH_SCHEME-http}
      - elastic_search_auth_enabled=${ELASTIC_SECURITY_ENABLED-false}
      - elastic_search_username=${ELASTIC_SEARCH_USERNAME-elastic}
      - elastic_search_password=${ELASTIC_SEARCH_PASSWORD}
      - search_providerName=${SEARCH_PROVIDER_NAME-dev.sunbirdrc.registry.service.NativeSearchService}
      - sunbird_sso_realm=${KEYCLOAK_REALM-sunbird-rc}
      - sunbird_sso_url=${sunbird_sso_url-http://keycloak:8080/auth}
      - oauth2_resource_uri=${oauth2_resource_uri-http://keycloak:8080/auth/realms/sunbird-rc}
      - oauth2_resource_roles_path=${oauth2_resource_roles_path-realm_access.roles}
      - identity_provider=${identity_provider-dev.sunbirdrc.auth.keycloak.KeycloakProviderImpl}
      - idgen_enabled=${IDGEN_ENABLED-false}
      - idgen_health_check_url=http://id-gen-service:8088/egov-idgen/health
      - idgen_generate_url=http://id-gen-service:8088/egov-idgen/id/_generate
      - idgen_id_format_url=http://id-gen-service:8088/egov-idgen/id/_format/add
      - sunbird_sso_admin_client_id=${KEYCLOAK_ADMIN_CLIENT_ID-admin-api}
      - sunbird_sso_client_id=${KEYCLOAK_CLIENT_ID-registry-frontend}
      - sunbird_sso_admin_client_secret=${KEYCLOAK_SECRET}
      - claims_enabled=${CLAIMS_ENABLED-false}
      - claims_url=http://claim-ms:8082
      - did_enabled=${DID_ENABLED-false}
      - did_health_check_url=${DID_HEALTH_CHECK_URL-http://identity:3332/health}
      - did_generate_url=${DID_GENERATE_URL-http://identity:3332/did/generate}
      - did_resolve_url=${DID_RESOLVE_URL-http://identity:3332/did/resolve}
      - signature_enabled=${SIGNATURE_ENABLED-false}
      - signature_provider=${SIGNATURE_PROVIDER-dev.sunbirdrc.registry.service.impl.SignatureV2ServiceImpl}
      - signature_v2_health_check_url=${SIGNATURE_V2_HEALTH_CHECK_URL-http://credential:3000/health}
      - signature_v2_issue_url=${SIGNATURE_V2_ISSUE_URL-http://credential:3000/credentials/issue}
      - signature_v2_get_url=${SIGNATURE_V2_GET_URL-http://credential:3000/credentials/{id}}
      - signature_v2_delete_url=${SIGNATURE_V2_DELETE_URL-http://credential:3000/credentials/{id}}
      - signature_v2_verify_url=${SIGNATURE_V2_VERIFY_URL-http://credential:3000/credentials/{id}/verify}
      - signature_v2_revocation_list_url=${SIGNATURE_V2_REVOCATION_LIST_URL-http://credential:3000/credentials/revocation-list?issuerId={issuerDid}&page={page}&limit={limit}}
      - signature_v2_schema_health_check_url=${SIGNATURE_V2_SCHEMA_HEALTH_CHECK_URL-http://schema:3333/health}
      - signature_v2_schema_create_url=${SIGNATURE_V2_SCHEMA_CREATE_URL-http://schema:3333/credential-schema}
      - signature_v2_schema_update_url=${SIGNATURE_V2_SCHEMA_UPDATE_URL-http://schema:3333/credential-schema/{id}/{version}}
      - signature_v2_schema_get_by_id_and_version_url=${SIGNATURE_V2_SCHEMA_GET_BY_ID_AND_VERSION_URL-http://schema:3333/credential-schema/{id}/{version}
      - signature_v2_schema_search_by_tags_url=${SIGNATURE_V2_SCHEMA_GET_BY_TAGS_URL-http://schema:3333/credential-schema?tags={tags}}
      - sign_url=http://certificate-signer:8079/sign
      - verify_url=http://certificate-signer:8079/verify
      - sign_health_check_url=http://certificate-signer:8079/health
      - certificate_enabled=${CERTIFICATE_ENABLED-false}
      - pdf_url=http://certificate-api:8078/api/v1/certificatePDF
      - certificate_health_check_url=http://certificate-api:8078/health
      - template_base_url=http://registry:8081/api/v1/templates/ #Looks for certificate templates for pdf copy of the signed certificate
      - sunbird_keycloak_user_set_password=true
      - filestorage_enabled=${FILESSTORAGE_ENABLED-false}
      - filestorage_connection_url=http://file-storage:9000
      - filestorage_access_key=admin
      - filestorage_secret_key=12345678
      - filestorage_bucket_key=issuance
      - registry_base_apis_enable=false
      - sunbird_keycloak_user_password=abcd@123
      - logging.level.root=INFO
      - enable_external_templates=true
      - async_enabled=${ASYNC_ENABLED-false}
      - authentication_enabled=${AUTHENTICATION_ENABLED-false}
      - kafka_bootstrap_address=kafka:9092
      - webhook_enabled=false
      - webhook_url=http://localhost:5001/api/v1/callback
      - redis_host=redis
      - redis_port=6379
      - manager_type=${MANAGER_TYPE-DefinitionsManager}
      - expand_reference=${EXPAND_REFERENCE-false}
      - swagger_title=${SWAGGER_TITLE-Sunbird Registry and Credential}
      - notification_async_enabled=${NOTIFICATION_ASYNC_ENABLED-false}
      - notification_enabled=${NOTIFICATION_ENABLED-false}
      - notification_url=${NOTIFICATION_URL-http://notification-ms:8765/notification-service/v1/notification}
    ports:
      - '8081:8081'
    depends_on:
      db:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'wget -nv -t1 --spider http://localhost:8081/health || exit 1',
        ]
      interval: 30s
      timeout: 10s
      retries: 10
  keycloak:
    image: ghcr.io/sunbird-rc/sunbird-rc-keycloak:latest
    volumes:
      - ./${KEYCLOAK_IMPORT_DIR-imports}:/opt/jboss/keycloak/imports
    environment:
      - KEYCLOAK_LOGO=https://svgshare.com/i/hCs.svg
      - DB_VENDOR=postgres
      - DB_ADDR=db
      - DB_PORT=5432
      - DB_DATABASE=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - KEYCLOAK_USER=${KEYCLOAK_ADMIN_USER-admin}
      - KEYCLOAK_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD-admin}
      - KEYCLOAK_IMPORT=/opt/jboss/keycloak/imports/realm-export.json
      - PROXY_ADDRESS_FORWARDING=true
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost:9990/ || exit 1']
      interval: 30s
      timeout: 10s
      retries: 10
    ports:
      - '8080:8080'
      - '9990:9990'
    depends_on:
      db:
        condition: service_healthy
  kibana:
    image: docker.elastic.co/kibana/kibana:7.16.3
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: http://es:9200
    depends_on:
      - es
